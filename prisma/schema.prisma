// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  name         String
  password     String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  refreshToken RefreshToken[]
  form         Form[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Form {
  id           Int            @id @default(autoincrement())
  userId       Int
  user         User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  name         String
  description  String?        @db.Text
  jsonBlocks   Json?
  views        Int            @default(0)
  responses    Int            @default(0)
  published    Boolean        @default(false)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  response     FormResponse[]
  FormSettings FormSettings[]
}

model FormSettings {
  id              Int      @id @default(autoincrement())
  primaryColor    String
  backgroundColor String
  formId          Int
  form            Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model FormResponse {
  id        Int      @id @default(autoincrement())
  response  Json?
  formId    Int
  form      Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
